[project]
name = "chain-of-summaries"
authors = [{ name = "William Brach", email = "william.brach@stuba.sk" }]
version = "0.0.6"
description = "A Python package improving /llms.txt format via iterative summarization."
readme = "README.md"
requires-python = ">=3.12"
dependencies = [
    "black>=25.1.0",
    "dspy==2.6.15",
    "einops>=0.8.0",
    "ipykernel>=6.29.5",
    "ipywidgets>=8.1.5",
    "litellm>=1.53.4",
    "matplotlib>=3.10.0",
    "pandas>=2.2.3",
    "python-dotenv>=1.0.1",
    "ruff>=0.9.4",
    "seaborn>=0.13.2",
    "sentencepiece>=0.2.0",
    "tiktoken>=0.8.0",
    "torch>=2.6.0",
    "transformers>=4.48.2",
]

[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[tool.uv]
package = true

[project.urls]
repository = "https://github.com/williambrach/chain-of-summaries"


[tool.ruff]
#https://beta.ruff.rs/docs/rules/
lint.select = [
    "E",  # pycodestyle errors
    "W",  # pycodestyyle warnings
    "F",  # pyflakes
    "I",  # isort
    "C",  # flake8-comprehensions
    "B",  # flake8-bugbear
    "G",
    "SIM1",
    "PLE",
    "N802", "N803", "N815", "N816","N806",
    "ANN",
    "UP",  # pyupgrade,
    # "T201", # check if print statement exists
]
lint.ignore = [
    "E501",  # line too long, handled by black
    "B008",  # do not perform function calls in argument defaults
    "C901",  # too complex
    "G004",
    "ANN101",
    "ANN003",
    "B904",
    "E402"
]

# Allow autofix for all enabled rules (when `--fix`) is provided.
lint.fixable = ["A", "B", "C", "D", "E", "F", "G", "I", "N", "Q", "S", "T", "W", "ANN", "ARG", "BLE", "COM", "DJ", "DTZ", "EM", "ERA", "EXE", "FBT", "ICN", "INP", "ISC", "NPY", "PD", "PGH", "PIE", "PL", "PT", "PTH", "PYI", "RET", "RSE", "RUF", "SIM", "SLF", "TCH", "TID", "TRY", "UP", "YTT"]
lint.unfixable = []

# Exclude a variety of commonly ignored directories.
lint.exclude = [
    ".bzr",
    ".direnv",
    ".eggs",
    ".git",
    ".git-rewrite",
    ".hg",
    ".mypy_cache",
    ".nox",
    ".pants.d",
    ".pytype",
    ".ruff_cache",
    ".svn",
    ".tox",
    ".venv",
    "__pypackages__",
    "_build",
    "buck-out",
    "build",
    "dist",
    "node_modules",
    "venv",
    "models.py"
]

# Allow unused variables when underscore-prefixed.
lint.dummy-variable-rgx = "^(_+|(_+[a-zA-Z0-9_]*[a-zA-Z0-9]+?))$"

# Same as Black.
line-length = 88

# Assume Python 3.10.
target-version = "py39"

[tool.ruff.lint.mccabe]
# Unlike Flake8, default to a complexity level of 10.
max-complexity = 10

[tool.ruff.lint.per-file-ignores]
"__init__.py" = ["F401"]

[tool.ruff.lint.isort]
known-third-party = ["fastapi", "pydantic", "starlette"]

[tool.black]
line-length = 88
target-version = ['py38']
include = '\.pyi?$'
extend-exclude = '''
/(
  # directories
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | build
  | dist
)/
'''
